import pyautogui
import threading
import time
import tkinter as tk
import keyboard


key = 'bot.png'
running = False
count = 0

# Link Test Bot
# https://humanbenchmark.com/tests/aim

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
def run_bot():
    global running, count
    while running:
        try:
            find = pyautogui.locateCenterOnScreen(key, confidence=0.5)
            if find:
                x, y = find
                pyautogui.click(x, y)
                print("Position:", x, y)
            # else:
            #     count += 1
            #     print("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏†‡∏≤‡∏û [", count, "]")
        except Exception as e:
            if str(e).strip() == "":  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ e ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                count += 1
                print("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏†‡∏≤‡∏û [", count, "]")
                time.sleep(0.5)
            else:
                print("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", e)
        time.sleep(0.1)

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏≠‡∏ó
def start():
    global running
    if not running:
        running = True
        threading.Thread(target=run_bot, daemon=True).start()
        status_label.config(text="üü¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...")

# ‡∏´‡∏¢‡∏∏‡∏î‡∏ö‡∏≠‡∏ó
def stop():
    global running
    running = False
    status_label.config(text="‚õî ‡∏´‡∏¢‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß")

# ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
def on_close():
    global running
    running = False
    keyboard.unhook_all_hotkeys()  # ‡∏•‡∏ö hotkey ‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏¥‡∏î
    root.destroy()

# ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ----------
root = tk.Tk()
root.title("Auto Click")
root.geometry("300x150")

start_button = tk.Button(root, text="Start", command=start, bg="green", fg="white", width=10)
start_button.pack(pady=10)

stop_button = tk.Button(root, text="Stop", command=stop, bg="red", fg="white", width=10)
stop_button.pack(pady=5)

status_label = tk.Label(root, text="‚õî ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
status_label.pack(pady=10)

# ---------- ‡∏ï‡∏±‡πâ‡∏á hotkey ‡∏£‡∏∞‡∏î‡∏±‡∏ö global ----------
keyboard.add_hotkey('s', start)
keyboard.add_hotkey('p', stop)

root.protocol("WM_DELETE_WINDOW", on_close)
root.mainloop()
